version '1.1.0-OrdersApp'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: "maven"
apply plugin: "findbugs"
apply plugin: "pmd"

sourceCompatibility = 1.8
targetCompatibility = 1.8

// add information about the jar Release

jar {
    baseName = 'OrdersApp'
    version =  '1.0.0' // first application version
}

mainClassName = "main.java.application.OrdersApplication"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}
 
apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
 
repositories {
    mavenCentral()
}
 
dependencies {
    testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.0.1'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.0.1',
            'org.junit.vintage:junit-vintage-engine:4.12.1',
            'org.junit.platform:junit-platform-launcher:1.0.1',
            'org.junit.platform:junit-platform-runner:1.0.1'
    )
}

pmd {
//    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = [
            "java-basic",
            "java-braces"
    ]
}
// add CPD to check
check << {
    File outDir = new File('build/reports/pmd/')
    outDir.mkdirs()
    ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
            classpath: configurations.pmd.asPath)
    ant.cpd(minimumTokenCount: '100', format: 'xml',
            outputFile: new File(outDir , 'cpd.xml')) {
        fileset(dir: "src/main/java") {
            include(name: '**/*.java')
        }
    }
}
// gradle wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '4.3.1'
}

